FROM azul/zulu-openjdk-alpine:11 AS builder

ENV WORKSPACE=/workspace

RUN apk add --repository http://dl-cdn.alpinelinux.org/alpine/edge/main/ --no-cache \
    nodejs \
    nodejs-npm \
    && mkdir $WORKSPACE \
    && chown 1001 $WORKSPACE \
    && chmod "g+rwX" $WORKSPACE \
    && chown 1001:root $WORKSPACE

COPY . $WORKSPACE
WORKDIR $WORKSPACE

RUN ./mvnw clean package

FROM azul/zulu-openjdk-alpine:11

ENV WORKSPACE=/workspace
ENV DEPLOYMENTS=/deployments
ENV JAVA_OPTIONS="-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager"
ENV NPM_CONFIG_PREFIX=/home/node/.npm-global
ENV PATH=$PATH:/home/node/.npm-global/bin
ENV PATH=$PATH:/home/node/.npm-global/lib
ENV NODE_ENV=production

ARG RUN_JAVA_VERSION=1.3.5

RUN addgroup -g 1000 node \
    && adduser -u 1000 -G node -s /bin/sh -D node \
    && apk add --no-cache \
    curl \
    nodejs \
    nodejs-npm \
    && mkdir /deployments \
    && chown node $DEPLOYMENTS \
    && chmod "g+rwX" $DEPLOYMENTS \
    && chown node:root $DEPLOYMENTS \
    && curl -sSL https://repo1.maven.org/maven2/io/fabric8/run-java-sh/${RUN_JAVA_VERSION}/run-java-sh-${RUN_JAVA_VERSION}-sh.sh -o $DEPLOYMENTS/run-java.sh \
    && chown node $DEPLOYMENTS/run-java.sh \
    && chmod 540 $DEPLOYMENTS/run-java.sh

RUN curl -sSL https://oss.sonatype.org/content/repositories/snapshots/biz/aQute/bnd/biz.aQute.jpm.run/4.0.0-SNAPSHOT/biz.aQute.jpm.run-4.0.0-20190612.143010-15.jar > tmp.jar \
    && JPM_BIN_DIR=`java -jar tmp.jar -g init | grep -e "Bin[ \t]*dir" | awk '{print $3}'` \
    && rm -f tmp.jar \
    && ${JPM_BIN_DIR}/jpm install -f https://releases.liferay.com/tools/blade-cli/latest/blade.jar \
    && blade update \
    && blade version

USER node

RUN npm i -g npm \
    && npm i -g yo \
    && npm i -g old-generator-liferay-theme@npm:generator-liferay-theme@^8.0.0 \
    && npm i -g generator-liferay-theme \
    && npm i -g generator-liferay-js

COPY --from=builder "$WORKSPACE/target/lib/*" "$DEPLOYMENTS/lib/"
COPY --from=builder "$WORKSPACE/target/*-runner.jar" "$DEPLOYMENTS/app.jar"

EXPOSE 8080

ENTRYPOINT [ "/deployments/run-java.sh" ]
